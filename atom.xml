<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Vijay Mahantesh]]></title>
  <link href="http://vijaym.in/atom.xml" rel="self"/>
  <link href="http://vijaym.in/"/>
  <updated>2015-10-04T10:16:45-07:00</updated>
  <id>http://vijaym.in/</id>
  <author>
    <name><![CDATA[Vijay Mahantesh SM]]></name>
    <email><![CDATA[vijaym123.gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Oh SNAP!]]></title>
    <link href="http://vijaym.in/blog/2014/05/26/oh-snap/"/>
    <updated>2014-05-26T01:38:00-07:00</updated>
    <id>http://vijaym.in/blog/2014/05/26/oh-snap</id>
    <content type="html"><![CDATA[<p>For years, I have been using <a href="https://networkx.github.io/" target="_blank">NetworkX</a> and hadnâ€™t found any good substitute which has fast execution as CPP with rapid development as python. <a href="http://snap.stanford.edu/snappy/index.html" target="_blank">SNAP</a> is a powerful tool which is aimed to be built this direction. For researches in network science, it provides tools to do general purpose and high performance system for analysis and manipulation of large networks.</p>

<p>Installing SNAP-python in Linux, Mac OS X and Windows is given here in this <a href="http://snap.stanford.edu/snappy/index.html#introduction" target="_blank">website</a>.</p>

<p>Sometimes when you are working on a library that is still under development it is better to use virtualenv. A Virtual Environment, put simply, is an isolated working copy of Python which allows you to work on a specific project without worry of affecting other projects. For more details about virtualenv please take a look at <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/" target="_blank">this</a>.</p>

<p>I faced certain problems with virtualenv and SNAP with Mac OS X 10.9.3. After reading few manuals on shared libraries, I could resolve this.</p>

<p>Here is the problem I faced:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">snap</span>
</span><span class='line'><span class="n">Fatal</span> <span class="n">Python</span> <span class="n">error</span><span class="p">:</span> <span class="n">PyThreadState_Get</span><span class="p">:</span> <span class="n">no</span> <span class="n">current</span> <span class="n">thread</span>
</span><span class='line'><span class="n">Abort</span> <span class="n">trap</span><span class="p">:</span> <span class="mi">6</span>
</span></code></pre></td></tr></table></div></figure>


<p>So I thought of writing a step by step blog to help users to install SNAP successfully with virtualenv.</p>

<p>To create a virtualenv directory :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">virtualenv</span> <span class="o">--</span><span class="n">python</span><span class="o">=</span><span class="err">$</span><span class="p">(</span><span class="n">which</span> <span class="n">python</span><span class="p">)</span> <span class="o">--</span><span class="n">distribute</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">site</span><span class="o">-</span><span class="n">packages</span> <span class="n">snap</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>Change your working directory to snap. Activate virtualenv and then install numpy, graphviz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">cd</span> <span class="n">snap</span><span class="o">/</span>
</span><span class='line'><span class="n">source</span> <span class="nb">bin</span><span class="o">/</span><span class="n">activate</span>
</span><span class='line'><span class="n">pip</span> <span class="n">install</span> <span class="n">numpy</span>
</span><span class='line'><span class="n">pip</span> <span class="n">install</span> <span class="n">graphviz</span>
</span></code></pre></td></tr></table></div></figure>


<p>Install gnuplot with homebrew. Download and install python extension for <a href="http://gnuplot-py.sourceforge.net/" target="_blank">gnuplot</a> within the virtualenv snap. Now comes the last step of downloading and installing SNAP.py library. Download SNAP repository from the <a href="http://snap.stanford.edu/snappy/release/" target="_blank">website</a> and place it in the working directoy (snap/).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">tar</span> <span class="n">zxvf</span> <span class="n">snap</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="mf">2.2</span><span class="o">-</span><span class="n">macosx10</span><span class="o">.</span><span class="mf">7.5</span><span class="o">-</span><span class="n">x64</span><span class="o">-</span><span class="n">py2</span><span class="o">.</span><span class="mf">7.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
</span><span class='line'><span class="n">cd</span> <span class="n">snap</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="mf">2.2</span><span class="o">-</span><span class="n">macosx10</span><span class="o">.</span><span class="mf">7.5</span><span class="o">-</span><span class="n">x64</span><span class="o">-</span><span class="n">py2</span><span class="o">.</span><span class="mi">7</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">python</span> <span class="n">setup</span><span class="o">.</span><span class="n">py</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>Execute the following lines in python or in ipython.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">snap</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you are getting the any errors related to PyThreadState_Get, then do the following.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">install_name_tool</span> <span class="o">-</span><span class="n">change</span> <span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">System</span><span class="o">/</span><span class="n">Library</span><span class="o">/</span><span class="n">Frameworks</span><span class="o">/</span><span class="n">Python</span><span class="o">.</span><span class="n">framework</span><span class="o">/</span><span class="n">Versions</span><span class="o">/</span><span class="mf">2.7</span><span class="o">//</span><span class="n">lib</span><span class="o">/</span><span class="n">libpython2</span><span class="o">.</span><span class="mf">7.</span><span class="n">dylib</span> <span class="n">snap</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="mf">2.2</span><span class="o">-</span><span class="n">macosx10</span><span class="o">.</span><span class="mf">7.5</span><span class="o">-</span><span class="n">x64</span><span class="o">-</span><span class="n">py2</span><span class="o">.</span><span class="mi">7</span><span class="o">/</span><span class="n">_snap</span><span class="o">.</span><span class="n">so</span>
</span></code></pre></td></tr></table></div></figure>


<p>install_name_tool is used in Mac OS X to change dynamic shared library install names. Now try to run the snap example files. Voila! It should work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Twitter Data Collection and Storage]]></title>
    <link href="http://vijaym.in/blog/2013/09/15/twitterdatacollection/"/>
    <updated>2013-09-15T15:36:00-07:00</updated>
    <id>http://vijaym.in/blog/2013/09/15/twitterdatacollection</id>
    <content type="html"><![CDATA[<p>Data collection and storage is the key to many projects. You have tons of data out there and you just want the part that is key to the problem. Yes, we are working a twitter virulence project to determine how virulent a tweet will go. In other words number of retweets it is going to have. We looked at <a href="http://snap.stanford.edu/data/twitter7.html" target="_blank">SNAP dataset</a> it has 467 million tweets collected from 20 million people covered over 7 month period. But the problem was this dataset was huge and most of it was junks, some spam messages too. Finding viral tweets and separating it out for the project was more than a herculean task.</p>

<p>So we decide to collect fresh data in real time. Collecting data in real time isnâ€™t that easy job, as there are a lot of restrictions put along by twitter. Twitter streaming api came to our rescue. So how does it work?</p>

<script src="https://gist.github.com/vijaym123/6334874.js"></script>


<p>To a streaming client (python snippet) messages will be pushed indicating Tweets and other events have occurred, without any of the overhead associated with polling a REST endpoint. For more documentation refer link.</p>

<p>For this kind of data collection we need a stable internet. Of course BSNL or any other services cannot provide it. :P We had this code running in AWS servers. The free usage tier from AWS has just 8gb of space. Having a DB kinda solution to store the tweets is really not an option because of the space constraint.</p>

<p>Jugad solution, use directories and files to store the tweets. This is something basic which uses file operations and occupies less space compared to DB. Yes, here the tweets are not indexed.</p>

<p>Having the infrastructure ready, we need to think about capturing viral tweets? After extensive search in twitter web, we made a list of people who have a good retweet count (Avg : 500 &ndash; 1000 ) and we tracked them using the streaming api. A glimpse of the list will reveal these name :
Justin, Barack Obama, Taylor Swift, Rihana, Ronaldo, Britney Spears, Shakira, Ellen Degeneres, Bruno Mars, Selena Gomez, Justin timberlake etc.</p>

<p>Here is the link to <a href="https://github.com/vijaym123/tweets-dataset" target="_blank">tweets-data</a> set collected for a period of 1 month.</p>

<h2>Stats about current dataset :</h2>

<ul>
<li>Number of tweets collected : 8227</li>
<li>Tweets with more than 1000 retweet : 1341</li>
</ul>


<h2>About the dataset</h2>

<p>This dataset is of 1.2 gb which was collected for nearly a month.</p>

<p>Each folder is named after the person-id. In each folder you have <strong>user.info</strong>. It is typically in this format :</p>

<p>LilTunechi ( Name )
IM YOUNG MONEY <a href="http://trukfit.com">http://trukfit.com</a> ( Bio )
Mars ( Location as specified by twitter-user )
Alaska ( Time-zone )
2010-02-22 05:29:44 ( Profile created time in UTC )
-28800 ( UTC-offset )
true ( Verified )</p>

<p>Other files are tweet files, named after there tweet-id. First line is the original tweet and the format is in this form :</p>

<p><strong>Tweet Message |||  length of tweet message ||| tweet-message created_at time ||| hashtags ||| followers_count at that point when he updated his status ||| hasLink</strong></p>

<p>Eg :</p>

<p>Rich Gang album right slime!! &amp; it&rsquo;s f#Kin awesome!!! ||| 66 ||| 2013-07-23 21:40:30 ||| [] ||| 12582328 ||| False</p>

<p>Following lines are retweet details and it is the following format.</p>

<p><strong>user id_str ||| retweet-time ||| retweeter&rsquo;s location ||| retweeter-virefied ||| screen-name of retweeter ||| bio</strong></p>

<p>Eg :</p>

<p>1511641856 ||| 2013-07-23 21:40:37 ||| Alexandria, PA  ||| False ||| LynetteCarter10 ||| #Arithmetic is being able to count up to twenty without taking off your #shoes. (Mickey Mouse)</p>

<p>PS: This is the inaugural blog post of this website. :)</p>
]]></content>
  </entry>
  
</feed>
